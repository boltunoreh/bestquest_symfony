imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'SonataMediaBundle:Form:media_widgets.html.twig'
            - 'SonataCoreBundle:Form:datepicker.html.twig'
            - 'Admin/media_widgets.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json:     Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                    SonataClassificationBundle: ~
                    ApplicationSonataClassificationBundle: ~

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Sonata Admin Configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.block.service.text:

sonata_admin:
    title: BestQuest admin
    security:
        handler: sonata.admin.security.handler.role
    dashboard:
        groups:
            app.admin.group.projects:
                label: 'Квесты'
                label_catalogue: SonataAdminBundle
            app.admin.group.about:
                label: 'О нас'
                label_catalogue: SonataAdminBundle

#Sonata Media Configuration
sonata_media:
    db_driver: doctrine_orm
    default_context: default
    providers:
        image:
            resizer: sonata.media.resizer.square
    contexts:
        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        project_slider_small_image:
            providers:
                - sonata.media.provider.image
            formats:
                medium: { width: 420 , quality: 100}
        project_slider_large_image:
            providers:
                - sonata.media.provider.image
            formats:
                medium: { width: 720 , quality: 100}
        project_background_image:
            providers:
                - sonata.media.provider.image
            formats:
                medium: { width: 985 , quality: 100}
        project_photo_image:
            providers:
                - sonata.media.provider.image
            formats:
                medium: { height: 480 , width: 600 , quality: 100}
        project_review_photo:
            providers:
                - sonata.media.provider.image
            formats:
                medium: { height: 128 , width: 128 , quality: 100}
        teammate:
            providers:
                - sonata.media.provider.image
            formats:
                small:  { width: 100 , quality: 100}
                medium: { width: 300 , quality: 100}
        client:
            providers:
                - sonata.media.provider.image
            formats:
                medium: { width: 600 , quality: 100}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false

# Fos User Configuration
fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager

    service:
        user_manager: sonata.user.orm.user_manager

sonata_user:
    security_acl: true
    manager_type: orm

# Stof Doctrine Extensions Configuration
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true

#Knp Menu Configuration
knp_menu:
    twig:
        template: KnpMenuBundle::menu.html.twig
    templating: false
    default_renderer: twig
#    providers:
#        builder_alias: false
#        builder_service: false
#        container_aware: true